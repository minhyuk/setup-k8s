- name: Setup Kubernetes Master Node
  hosts: master
  become: yes
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install common packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - chrony
          - gnupg
        state: present

    - name: Add containerd apt keyring
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        keyring: /etc/apt/keyrings/docker.gpg
        state: present

    - name: Add containerd repository
      apt_repository:
        repo: deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu noble stable
        state: present
        filename: docker

    - name: Install containerd
      apt:
        name: containerd.io
        state: present

    - name: Create containerd config directory
      file:
        path: /etc/containerd
        state: directory

    - name: Configure containerd
      shell: |
        containerd config default | tee /etc/containerd/config.toml
        sed -i 's/SystemdCgroup = false/SystemdCgroup = true/' /etc/containerd/config.toml

    - name: Restart containerd
      service:
        name: containerd
        state: restarted
        enabled: yes

    - name: Add Kubernetes apt keyring
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        keyring: /etc/apt/keyrings/kubernetes-archive-keyring.gpg
        state: present

    - name: Add Kubernetes repository
      apt_repository:
        repo: deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: kubernetes

    - name: Install Kubernetes packages
      apt:
        name:
          - kubelet={{ kubernetes_version }}
          - kubeadm={{ kubernetes_version }}
          - kubectl={{ kubernetes_version }}
        state: present

    - name: Initialize Kubernetes cluster
      command: kubeadm init --pod-network-cidr={{ pod_network_cidr }}
      args:
        creates: /etc/kubernetes/admin.conf

    - name: Create .kube directory
      file:
        path: /home/{{ ansible_user }}/.kube
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"

    - name: Copy admin.conf
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/{{ ansible_user }}/.kube/config
        remote_src: yes
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"

    - name: Install Calico CNI
      become: false
      command: kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.27.0/manifests/calico.yaml

    - name: Install Helm
      shell: |
        curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

    - name: Add NVIDIA Helm repository
      become: false
      command: helm repo add nvidia https://nvidia.github.io/gpu-operator && helm repo update

    - name: Install GPU Operator
      become: false
      command: helm install gpu-operator nvidia/gpu-operator --namespace gpu-operator --create-namespace --wait

    - name: Get join command
      command: kubeadm token create --print-join-command
      register: join_command

    - name: Save join command
      local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="./join-command"


